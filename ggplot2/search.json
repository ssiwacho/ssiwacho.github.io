[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "การสร้างทัศนภาพข้อมูลด้วยโปรแกรม R",
    "section": "",
    "text": "ความรู้และทักษะที่จำเป็น\nการใช้งานโปรแกรม R ในการสร้างทัศนภาพข้อมูล (รวมทั้งการทำงานอื่น ๆ ที่เกี่ยวข้อง) ความรู้และทักษะที่จำเป็นต้องมีมาบ้างคือ การใช้โปรแกรม R พื้นฐาน กล่าวคือผู้ใช้งานควรมีความรู้เกี่ยวกับสภาพแวดล้อมพื้นฐานของ R มีความเข้าใจตัวแปรประเภทต่าง ๆ ใน R สามารถนำเข้าชุดข้อมูล จัดระเบียบ และจัดกระทำข้อมูลให้มีความพร้อมสำหรับการวิเคราะห์หรือการสร้างทัศนภาพข้อมูลได้ หากจะกล่าวอย่างเฉพาะเจาะจงผู้อ่านควรมีความรู้และสามารถใช้ package ได้แก่\n\nreadr (หรือฟังก์ชันใน base package ที่เกี่ยวข้องกับการนำเข้าข้อมูล)\nreadxl\ntidyr\ndplyr\n\nผู้อ่านที่ไม่มีพื้นฐานโปรแกรม R มาก่อนเลย แนะนำให้ศึกษาพื้นฐานการใช้ R มาก่อน โดยอาจศึกษาจากหนังสือ\n\nR for Data Science\nสถิติและวิทยาการข้อมูลทางการศึกษา : R สำหรับการจัดระเบียบและจัดกระทำข้อมูล\n\nอย่างไรก็ตามเนื้อหาในเอกสารคำสอนนี้จะมีการแทรกเนื้อหาพื้นฐานที่จำเป็นในพร้อม ๆ กับเนื้อหาหลักอยู่แล้ว หากผู้อ่านพอมีพื้นฐานอยู่บ้างคิดว่าน่าจะสามารถติดตามเนื้อหาในเอกสารคำสอนนี้ได้โดยไม่ยากนัก\n\n\nชุดข้อมูลที่ใช้เป็นตัวอย่างในเอกสารคำสอน\nชุดข้อมูลที่ใช้เป็นตัวอย่างในเอกสารคำสอนนี้ ประกอบด้วย\n\nชุดข้อมูล gapminder เป็นข้อมูลที่เกี่ยวข้องกับความอยู่ดีมีสุขของประชากรโลกในแต่ละประเทศ ชุดข้อมูลนี้เป็นชุดข้อมูลตัวอย่างที่อยู่ใน package-gapminder สามารถดาวน์โหลดและเรียกใช้ได้โดยพิมพ์คำสั่งต่อไปนี้\n\n\n\n\n\n\n\n\nชุดข้อมูลจากไฟล์ ชุดข้อมูลตัวอย่าง.xlsx ที่ได้ให้ไว้ในส่วนเอกสารประกอบการสอน week2 ใน google class room\n\n\nเนื่องจากไฟล์ข้อมูล ชุดข้อมูลตัวอย่าง.xlsx เป็นไฟล์นามสกุล .xlsx การนำเข้าไฟล์ดังกล่าวจะใช้ฟังก์ชัน read_excel() ของ package-readxl ช่วย สำหรับผู้ที่เพิ่งเริ่มใช้ R หรือยังไม่มี package นี้สามารถดาวน์โหลดและติดตั้งได้โดยเขียนคำสั่งดังตัวอย่างด้านล่าง\n\n\n\n\n\n\nหากยังจำได้ภายในไฟล์ ชุดข้อมูลตัวอย่าง.xlsx ประกอบด้วย worksheet ย่อย ๆ จำนวนหลาย worksheet ดังนั้นก่อนที่จะนำเข้าผู้วิเคราะห์ควรที่จะต้องสำรวจก่อนว่าภายในไฟล์ข้อมูลดังกล่าวมี worksheet อะไรบ้าง และ worksheet ไหนที่เกี่ยวข้องกับการทำงานของเรา การสำรวจ worksheet สามารถทำได้โดยใช้ฟังก์ชัน excel_sheets(path) โดยที่ path เรียกว่า อาร์กิวเมนท์ (argument) ของฟังก์ชัน excel_sheets() ผู้วิเคราะห์จะกำหนดการทำงานของฟังก์ชันใน R แต่ละฟังก์ชันผ่านทางอาร์กิวเมนท์ดังกล่าว ซึ่งจะแตกต่างกันไปตามฟังก์ชันที่เลือกใช้\nในกรณีนี้ path เป็นอาร์กิวเมนท์ เพื่อให้ผู้วิเคราะห์กำหนดชื่อไฟล์หรือที่อยู่ของไฟล์ที่ต้องการ ดังตัวอย่างด้านล่าง ซึ่งจะเห็นว่าชุดข้อมูลดังกล่าวประกอบด้วย worksheet จำนวน 10 worksheet\n\n\n [1] \"งบประมาณด้านการศึกษา\"          \"จำนวนผู้สำเร็จการศึกษา ปวช. ปวส\"\n [3] \"ผลสัมฤทธิ์และรายได้เฉลี่ย\"         \"online learning dataset\"    \n [5] \"PrePost\"                     \"โอกาสทางการศึกษา\"            \n [7] \"จำนวนปีการศึกษาเฉลี่ย\"           \"สถิติ O-NET\"                  \n [9] \"งานพัสดุโรงเรียน\"               \"บรรยากาศในห้องเรียน\"          \n\n\nในกรณีที่ไม่ทราบว่าจะกำหนดอาร์กิวเมนท์อย่างไร สามารถเรียกดูวิธีการใช้ฟังก์ชันต่าง ๆ จากคู่มือ โดยพิมพ์คำสั่ง ?excel_sheets()\nสมมุติว่าผู้วิเคราะห์ต้องการใช้ข้อมูลใน worksheet \"PrePost\" สามารถ worksheet ดังกล่าวเข้ามาใน R ได้ด้วยฟังก์ชัน read_excel(path, sheet) โดยที่อาร์กิวเมนท์ path และ sheet ใช้สำหรับกำหนดชื่อหรือที่อยู่ของไฟล์ข้อมูล และ worksheet ที่ต้องการนำเข้า โดยการกำหนด worksheet ที่ต้องการนำเข้าสามารถกำหนดเป็นหมายเลขลำดับของ worksheet ก็ได้ หรือจะกำหนดเป็นชื่อของ worksheet ตามที่แสดงใน output ด้านบนก็ได้ดังตัวอย่างต่อไปนี้\n\n\n\nคำสั่งข้างต้นหมายความว่าให้นำข้อมูลจากชุดข้อมูลที่กำหนดเข้ามาใน R แล้วเก็บไว้ในตัวแปร mydata ตัวแปรในเชิง programming มีความหมายที่แตกต่างไปจากตัวแปรในเชิงสถิติหรือการวิจัย โดยตัวแปรใน R นี้จะหมายถึงวัตถุภายในสภาพแวดล้อมของ R ที่ทำหน้าที่เก็บข้อมูล/ผลลัพธ์ที่ได้จากการประมวลผลเอาไว้ในหน่วยความจำของคอมพิวเตอร์ ซึ่งทำให้ผู้ใช้สามารถเรียกดูค่าที่เก็บไว้ในภายหลัง หรือนำค่า/ผลลัพธ์ที่เก็บไว้ไปใช้ในการดำเนินการในขั้นตอนอื่น ๆ ได้โดยง่าย (สิวะโชติ ศรีสุทธิยากร, 2564)\nตัวแปรใน R มีหลายประเภท และสามารถจำแนกได้หลากหลายลักษณะ หากจำแนกตามโครงสร้างอาจจำแนกได้เป็น ตัวแปรสเกลาร์ (scalar) เวกเตอร์ (vector) เมทริกซ์ (matrix) อาร์เรย์ (array) ชุดข้อมูล (dataframe/tibble) และลิสท์ (list)\n\n\nทบทวนการสำรวจชุดข้อมูลใน R\nตัวแปร gapminder และ mydata ที่นำเข้ามาในข้างต้นจะมีสถานะเป็นตัวแปรแบบชุดข้อมูล ผู้ใช้งานจะไม่ได้เห็นข้อมูลเป็นตารางเหมือนที่เห็นใน worksheet ของ excel หากต้องการเรียกดูหรือสำรวจข้อมูลดังกล่าวสามารถทำได้หลายวิธีการ วิธีการแรกคือเรียกชื่อตัวแปรตรง ๆ ดังนี้\n\n\n# A tibble: 10 × 3\n   student PreTest PostTest\n   <chr>     <dbl>    <dbl>\n 1 บุญเติม         2        1\n 2 บุญหนัก         2        4\n 3 บุญทับ          1        0\n 4 บุญรอด         2        1\n 5 บุญมี           3        6\n 6 บุญมา          0        4\n 7 บุญชุ่ม          3        8\n 8 บุญชอบ         0        1\n 9 บุญเยอะ        0        2\n10 บุญเหลือ        1        5\n\n\nอย่างไรก็ตามการเรียกชื่อตัวแปรตรง ๆ ในข้างต้นอาจเกิดปัญหาข้อมูลล้นหน้า console (หากต้องการเห็นว่าปัญหาดังกล่าวเป็นอย่างไรลองเรียก gapminder ใน console ดู)\nโดยปกติผู้วิเคราะห์จึงจะเรียกดูข้อมูลในชุดข้อมูลโดยสรุปผ่านฟังก์ชัน เช่น head(), tail(), summary(), str() หรือ glimpse() ดังตัวอย่างต่อไปนี้\n\n\n# A tibble: 6 × 3\n  student PreTest PostTest\n  <chr>     <dbl>    <dbl>\n1 บุญเติม         2        1\n2 บุญหนัก         2        4\n3 บุญทับ          1        0\n4 บุญรอด         2        1\n5 บุญมี           3        6\n6 บุญมา          0        4\n\n\ntibble [10 × 3] (S3: tbl_df/tbl/data.frame)\n $ student : chr [1:10] \"บุญเติม\" \"บุญหนัก\" \"บุญทับ\" \"บุญรอด\" ...\n $ PreTest : num [1:10] 2 2 1 2 3 0 3 0 0 1\n $ PostTest: num [1:10] 1 4 0 1 6 4 8 1 2 5\n\n\nการเรียกใช้ฟังก์ชัน glimpse() จำเป็นต้องติดตั้ง package-dplyr เพิ่มเติม ดังนี้\n\n\n\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\nRows: 10\nColumns: 3\n$ student  <chr> \"บุญเติม\", \"บุญหนัก\", \"บุญทับ\", \"บุญรอด\", \"บุญมี\", \"บุญมา\", \"บุญชุ่ม\", \"บุญ…\n$ PreTest  <dbl> 2, 2, 1, 2, 3, 0, 3, 0, 0, 1\n$ PostTest <dbl> 1, 4, 0, 1, 6, 4, 8, 1, 2, 5\n\n\nฟังก์ชัน summary() จะแสดงค่าสถิติพื้นฐานของตัวแปร ซึ่งขึ้นอยู่กับประเภทของตัวแปรในชุดข้อมูล โดยถ้าเป็นตัวแปรเชิงปริมาณ จะนำเสนอค่าสถิติของ Tukey 5 ค่า และค่าเฉลี่ย แต่ถ้าเป็นตัวแปรจัดประเภทจะนำเสนอการแจกแจงความถี่ของตัวแปรนั้น อย่างไรก็ตามตัวแปรจัดประเภทดังกล่าวต้องมีสถานะเป็นตัวแปร factor ก่อน (ไว้จะหาโอกาสกล่าวถึงอีกทีภายหลัง)\n\n\n   student             PreTest        PostTest   \n Length:10          Min.   :0.00   Min.   :0.00  \n Class :character   1st Qu.:0.25   1st Qu.:1.00  \n Mode  :character   Median :1.50   Median :3.00  \n                    Mean   :1.40   Mean   :3.20  \n                    3rd Qu.:2.00   3rd Qu.:4.75  \n                    Max.   :3.00   Max.   :8.00  \n\n\n\n\nทบทวนการจัดกระทำข้อมูลด้วย package-dplyr\npackge-dplyr เป็น package อีกอันหนึ่งที่มีแนวโน้มจะใช้มากในงานสร้างทัศนภาพข้อมูล (รวมถึงงานวิเคราะห์ข้อมูลอื่น ๆ ด้วย) package ดังกล่าวใช้สำหรับสำหรับการจัดกระทำข้อมูลที่อยู่ในรูปแบบตาราง (tabular data) เครื่องมือหลัก ๆ ของ package นี้ได้แก่ฟังก์ชัน\n\nselect() สำหรับคัดเลือกตัวแปรที่ต้องการจากชุดข้อมูล\nfilter() สำหรับคัดกรองหน่วยข้อมูลจากชุดข้อมูล\nmutate() สำหรับแปลงข้อมูลค่าสังเกตของตัวแปรจากชุดข้อมูล\nsummarise() สำหรับคำนวณค่าสถิติพื้นฐานของตัวแปรจากชุดข้อมูล\narrange() สำหรับจัดลำดับข้อมูลเหมือนฟังก์ชัน sort ใน excel\ngroup_by() สำหรับจัดกลุ่มหน่วยข้อมูลตามค่าของตัวแปรจัดประเภทที่กำหนด มักใช้ร่วมกับฟังก์ชัน summarise()\n\nนิสิตที่ยังไม่มีพื้นฐาน dplyr เลยสามารถศึกษาได้จาก google ตามความถนัด หรือเอกสารที่แนะนำในข้างต้น"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "มโนทัศน์เบื้องต้นของ ggplot2",
    "section": "",
    "text": "ggplot2 เป็น package สำคัญตัวหนึ่งในโปรแกรม R วัตถุประสงค์หลักของการใช้ ggplot2 คือเพื่อสร้างทัศนภาพข้อมูลเชิงสถิต (static data visualization) มีจุดเด่นคือสามารถสร้างและปรับแต่งทัศนภาพข้อมูลได้อย่างหลากหลาย และสะดวก package-ggplot2 เป็นหนึ่งใน package ภายใต้จักรวาล tidy (tidyverse) ที่พัฒนาขึ้นโดย Hadley Wickham และคณะ\nก่อนที่จะใช้งานฟังก์ชันต่าง ๆ ภายใต้ package-ggplot2 ผู้ใช้จำเป็นต้องดาวน์โหลดและติดตั้ง package โดยใช้คำสั่งต่อไปนี้"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "intro.html#หลก-grammar-of-graphic",
    "href": "intro.html#หลก-grammar-of-graphic",
    "title": "มโนทัศน์เบื้องต้นของ ggplot2",
    "section": "หลัก Grammar of Graphic",
    "text": "หลัก Grammar of Graphic\n“gg” ใน ggplot2 ย่อมาจากคำว่า “grammar of graphics” ที่เป็นหลักการสร้างทัศนภาพข้อมูลที่ถูกพัฒนาขึ้นโดยนักสถิติ Leland Wilkinson (2005) หลักการดังกล่าวมีแนวคิดว่าทัศนภาพข้อมูลแต่ละรูปสร้างขึ้นจากการรวมส่วนประกอบเชิงกราฟิกต่าง ๆ หลายตัวเข้าด้วยกัน\nส่วนประกอบหลักของทัศนภาพข้อมูลตามหลัก grammar of graphic มี 8 ประเภท แต่ละประเภทเรียกว่า ชั้น (layer) ได้แก่ Data, Aesthetics, Geometries Objects, Scales, Facets, Statistics, Coordinates และ Themes ส่วนประกอบดังกล่าวจำแนกเป็นส่วนประกอบจำเป็น (neccessary layers) ได้แก่ Data, Aesthetics (ซึ่งอย่างน้อยต้องมีการจับคู่ตัวแปรกับแกนในระบบพิกัดที่เลือกใช้) และ Geometric Objects และส่วนประกอบที่เหลือเป็นส่วนประกอบทางเลือก (optional layers) ที่ใช้ปรับแต่ง/เพิ่มเติม/เปลี่ยนรายละเอียดในส่วนต่าง ๆ ของทัศนภาพข้อมูลเป็นการเฉพาะ\n\n\n\nhttps://towardsdatascience.com/a-comprehensive-guide-to-the-grammar-of-graphics-for-effective-visualization-of-multi-dimensional-1f92b4ed4149\n\n\nมีสิ่งหนึ่งที่ผู้อ่านควรทำความเข้าใจไว้ก่อนคือ grammar of graphic ไม่ใช่วิธีการหรือแนวทางที่ใช้สำหรับสร้างทัศนภาพข้อมูลที่ดี แต่เป็นหลักที่ใช้บรรยายอัลกอริทึมในการสร้างทัศนภาพข้อมูล ซึ่งช่วยให้การสร้างทัศนภาพข้อมูลเป็นไปตามที่ตั้งใจโดยง่ายภายใต้ framework การทำงานเดียวกัน\nการกำหนดลักษณะของส่วนประกอบดังกล่าวที่แตกต่างกันเป็นปัจจัยให้ทัศนภาพข้อมูลที่เป็นผลผลิตมีความแตกต่างกันไปด้วย รูปด้านล่างแสดงทัศนภาพข้อมูลที่สร้างจากข้อมูลชุดเดียวกัน แต่มี geometric object ที่แตกต่างกัน"
  },
  {
    "objectID": "intro.html#ความรและทกษะทจำเปน",
    "href": "intro.html#ความรและทกษะทจำเปน",
    "title": "1  มโนทัศน์เบื้องต้น",
    "section": "1.2 ความรู้และทักษะที่จำเป็น",
    "text": "1.2 ความรู้และทักษะที่จำเป็น\nการใช้งานโปรแกรม R ในการสร้างทัศนภาพข้อมูล (รวมทั้งการทำงานอื่น ๆ ที่เกี่ยวข้อง) ความรู้และทักษะที่จำเป็นต้องมีมาบ้างคือ การใช้โปรแกรม R พื้นฐาน กล่าวคือผู้ใช้งานควรมีความรู้เกี่ยวกับสภาพแวดล้อมพื้นฐานของ R มีความเข้าใจตัวแปรประเภทต่าง ๆ ใน R สามารถนำเข้าชุดข้อมูล จัดระเบียบ และจัดกระทำข้อมูลให้มีความพร้อมสำหรับการวิเคราะห์หรือการสร้างทัศนภาพข้อมูลได้ หากจะกล่าวอย่างเฉพาะเจาะจงผู้อ่านควรมีความรู้และสามารถใช้ package ได้แก่\n\nreadr (หรือฟังก์ชันใน base package ที่เกี่ยวข้องกับการนำเข้าข้อมูล)\nreadxl\ntidyr\ndplyr\n\nผู้อ่านที่ไม่มีพื้นฐานโปรแกรม R มาก่อนเลย แนะนำให้ศึกษาพื้นฐานการใช้ R มาก่อน โดยอาจศึกษาจากหนังสือ\n\nR for Data Science\nสถิติและวิทยาการข้อมูลทางการศึกษา : R สำหรับการจัดระเบียบและจัดกระทำข้อมูล\n\nอย่างไรก็ตามเนื้อหาในเอกสารคำสอนนี้จะมีการแทรกเนื้อหาพื้นฐานที่จำเป็นในพร้อม ๆ กับเนื้อหาหลักอยู่แล้ว หากผู้อ่านพอมีพื้นฐานอยู่บ้างคิดว่าน่าจะสามารถติดตามเนื้อหาในเอกสารคำสอนนี้ได้โดยไม่ยากนัก"
  },
  {
    "objectID": "index.html#gapminder-dataset",
    "href": "index.html#gapminder-dataset",
    "title": "การสร้างทัศนภาพข้อมูลด้วยโปรแกรม R",
    "section": "gapminder dataset",
    "text": "gapminder dataset\n\nชุดข้อมูล gapminder ซึ่งเป็นข้อมูลที่เกี่ยวข้องกับความอยู่ดีมีสุขของประชากรโลกในแต่ละประเทศ ชุดข้อมูลนี้เป็นชุดข้อมูลตัวอย่างที่อยู่ใน package-gapminder สามารถดาวน์โหลดและเรียกใช้ได้โดยพิมพ์คำสั่งต่อไปนี้\n\n\ninstall.packages(\"gapminder\")\nlibrary(gapminder)\n\n\n\n\nข้อมูลอีกชุดที่จะใช้เป็นตัวอย่างจะใช้ข้อมูลจากไฟล์ “ชุดข้อมูลตัวอย่าง.xlsx” ที่ได้ให้ไว้ในส่วนเอกสารประกอบการสอน week2 ใน google class room\n\nเนื่องจากไฟล์ข้อมูล ชุดข้อมูลตัวอย่าง.xlsx เป็นไฟล์นามสกุล .xlsx การนำเข้าไฟล์ดังกล่าวจะใช้ฟังก์ชัน read_excel() ของ package-readxl ช่วย สำหรับผู้ที่เพิ่งเริ่มใช้ R หรือยังไม่มี package นี้สามารถดาวน์โหลดและติดตั้งได้โดยเขียนคำสั่งดังตัวอย่างด้านล่าง\n\ninstall.packages(\"readxl\") \nlibrary(readxl) \n\n\n\n\nหากยังจำได้ภายในไฟล์ ชุดข้อมูลตัวอย่าง.xlsx ประกอบด้วย worksheet ย่อย ๆ จำนวนหลาย worksheet ดังนั้นก่อนที่จะนำเข้าผู้วิเคราะห์ควรที่จะต้องสำรวจก่อนว่าภายในไฟล์ข้อมูลดังกล่าวมี worksheet อะไรบ้าง และ worksheet ไหนที่เกี่ยวข้องกับการทำงานของเรา การสำรวจ worksheet สามารถทำได้โดยใช้ฟังก์ชัน excel_sheets(path) โดยที่ path เรียกว่า อาร์กิวเมนท์ (argument) ของฟังก์ชัน excel_sheets() ผู้วิเคราะห์จะกำหนดการทำงานของฟังก์ชันใน R แต่ละฟังก์ชันผ่านทางอาร์กิวเมนท์ดังกล่าว ซึ่งจะแตกต่างกันไปตามฟังก์ชันที่เลือกใช้\nในกรณีนี้ path เป็นอาร์กิวเมนท์ เพื่อให้ผู้วิเคราะห์กำหนดชื่อไฟล์หรือที่อยู่ของไฟล์ที่ต้องการ ดังตัวอย่างด้านล่าง ซึ่งจะเห็นว่าชุดข้อมูลดังกล่าวประกอบด้วย worksheet จำนวน 10 worksheet\n\nexcel_sheets(path=\"/Users/siwachoat/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/เอกสารประกอบการสอน/2758686/ชุดข้อมูลตัวอย่าง.xlsx\")\n\n [1] \"งบประมาณด้านการศึกษา\"          \"จำนวนผู้สำเร็จการศึกษา ปวช. ปวส\"\n [3] \"ผลสัมฤทธิ์และรายได้เฉลี่ย\"         \"online learning dataset\"    \n [5] \"PrePost\"                     \"โอกาสทางการศึกษา\"            \n [7] \"จำนวนปีการศึกษาเฉลี่ย\"           \"สถิติ O-NET\"                  \n [9] \"งานพัสดุโรงเรียน\"               \"บรรยากาศในห้องเรียน\"          \n\n\nในกรณีที่ไม่ทราบว่าจะกำหนดอาร์กิวเมนท์อย่างไร สามารถเรียกดูวิธีการใช้ฟังก์ชันต่าง ๆ จากคู่มือ โดยพิมพ์คำสั่ง ?excel_sheets()\nสมมุติว่าผู้วิเคราะห์ต้องการใช้ข้อมูลใน worksheet \"PrePost\" สามารถ worksheet ดังกล่าวเข้ามาใน R ได้ด้วยฟังก์ชัน read_excel(path, sheet) โดยที่อาร์กิวเมนท์ path และ sheet ใช้สำหรับกำหนดชื่อหรือที่อยู่ของไฟล์ข้อมูล และ worksheet ที่ต้องการนำเข้า โดยการกำหนด worksheet ที่ต้องการนำเข้าสามารถกำหนดเป็นหมายเลขลำดับของ worksheet ก็ได้ หรือจะกำหนดเป็นชื่อของ worksheet ตามที่แสดงใน output ด้านบนก็ได้ดังตัวอย่างต่อไปนี้\n\nmydata<-read_excel(path=\"/Users/siwachoat/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/เอกสารประกอบการสอน/2758686/ชุดข้อมูลตัวอย่าง.xlsx\",\n                 sheet=\"PrePost\")\n\nคำสั่งข้างต้นหมายความว่าให้นำข้อมูลจากชุดข้อมูลที่กำหนดเข้ามาใน R แล้วเก็บไว้ในตัวแปร mydata ตัวแปรในเชิง programming มีความหมายที่แตกต่างไปจากตัวแปรในเชิงสถิติหรือการวิจัย โดยตัวแปรใน R นี้จะหมายถึงวัตถุภายในสภาพแวดล้อมของ R ที่ทำหน้าที่เก็บข้อมูล/ผลลัพธ์ที่ได้จากการประมวลผลเอาไว้ในหน่วยความจำของคอมพิวเตอร์ ซึ่งทำให้ผู้ใช้สามารถเรียกดูค่าที่เก็บไว้ในภายหลัง หรือนำค่า/ผลลัพธ์ที่เก็บไว้ไปใช้ในการดำเนินการในขั้นตอนอื่น ๆ ได้โดยง่าย (สิวะโชติ ศรีสุทธิยากร, 2564)\nตัวแปรใน R มีหลายประเภท และสามารถจำแนกได้หลากหลายลักษณะ หากจำแนกตามโครงสร้างอาจจำแนกได้เป็น ตัวแปรสเกลาร์ (scalar) เวกเตอร์ (vector) เมทริกซ์ (matrix) อาร์เรย์ (array) ชุดข้อมูล (dataframe/tibble) และลิสท์ (list)"
  },
  {
    "objectID": "index.html#ชดขอมล-gapminder",
    "href": "index.html#ชดขอมล-gapminder",
    "title": "การสร้างทัศนภาพข้อมูลด้วยโปรแกรม R",
    "section": "ชุดข้อมูล gapminder",
    "text": "ชุดข้อมูล gapminder\n\nชุดข้อมูล gapminder ซึ่งเป็นข้อมูลที่เกี่ยวข้องกับความอยู่ดีมีสุขของประชากรโลกในแต่ละประเทศ ชุดข้อมูลนี้เป็นชุดข้อมูลตัวอย่างที่อยู่ใน package-gapminder สามารถดาวน์โหลดและเรียกใช้ได้โดยพิมพ์คำสั่งต่อไปนี้\n\n\ninstall.packages(\"gapminder\")\nlibrary(gapminder)\n\n\n\n\nข้อมูลอีกชุดที่จะใช้เป็นตัวอย่างจะใช้ข้อมูลจากไฟล์ “ชุดข้อมูลตัวอย่าง.xlsx” ที่ได้ให้ไว้ในส่วนเอกสารประกอบการสอน week2 ใน google class room\n\nเนื่องจากไฟล์ข้อมูล ชุดข้อมูลตัวอย่าง.xlsx เป็นไฟล์นามสกุล .xlsx การนำเข้าไฟล์ดังกล่าวจะใช้ฟังก์ชัน read_excel() ของ package-readxl ช่วย สำหรับผู้ที่เพิ่งเริ่มใช้ R หรือยังไม่มี package นี้สามารถดาวน์โหลดและติดตั้งได้โดยเขียนคำสั่งดังตัวอย่างด้านล่าง\n\ninstall.packages(\"readxl\") \nlibrary(readxl) \n\n\n\n\nหากยังจำได้ภายในไฟล์ ชุดข้อมูลตัวอย่าง.xlsx ประกอบด้วย worksheet ย่อย ๆ จำนวนหลาย worksheet ดังนั้นก่อนที่จะนำเข้าผู้วิเคราะห์ควรที่จะต้องสำรวจก่อนว่าภายในไฟล์ข้อมูลดังกล่าวมี worksheet อะไรบ้าง และ worksheet ไหนที่เกี่ยวข้องกับการทำงานของเรา การสำรวจ worksheet สามารถทำได้โดยใช้ฟังก์ชัน excel_sheets(path) โดยที่ path เรียกว่า อาร์กิวเมนท์ (argument) ของฟังก์ชัน excel_sheets() ผู้วิเคราะห์จะกำหนดการทำงานของฟังก์ชันใน R แต่ละฟังก์ชันผ่านทางอาร์กิวเมนท์ดังกล่าว ซึ่งจะแตกต่างกันไปตามฟังก์ชันที่เลือกใช้\nในกรณีนี้ path เป็นอาร์กิวเมนท์ เพื่อให้ผู้วิเคราะห์กำหนดชื่อไฟล์หรือที่อยู่ของไฟล์ที่ต้องการ ดังตัวอย่างด้านล่าง ซึ่งจะเห็นว่าชุดข้อมูลดังกล่าวประกอบด้วย worksheet จำนวน 10 worksheet\n\nexcel_sheets(path=\"/Users/siwachoat/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/เอกสารประกอบการสอน/2758686/ชุดข้อมูลตัวอย่าง.xlsx\")\n\n [1] \"งบประมาณด้านการศึกษา\"          \"จำนวนผู้สำเร็จการศึกษา ปวช. ปวส\"\n [3] \"ผลสัมฤทธิ์และรายได้เฉลี่ย\"         \"online learning dataset\"    \n [5] \"PrePost\"                     \"โอกาสทางการศึกษา\"            \n [7] \"จำนวนปีการศึกษาเฉลี่ย\"           \"สถิติ O-NET\"                  \n [9] \"งานพัสดุโรงเรียน\"               \"บรรยากาศในห้องเรียน\"          \n\n\nในกรณีที่ไม่ทราบว่าจะกำหนดอาร์กิวเมนท์อย่างไร สามารถเรียกดูวิธีการใช้ฟังก์ชันต่าง ๆ จากคู่มือ โดยพิมพ์คำสั่ง ?excel_sheets()\nสมมุติว่าผู้วิเคราะห์ต้องการใช้ข้อมูลใน worksheet \"PrePost\" สามารถ worksheet ดังกล่าวเข้ามาใน R ได้ด้วยฟังก์ชัน read_excel(path, sheet) โดยที่อาร์กิวเมนท์ path และ sheet ใช้สำหรับกำหนดชื่อหรือที่อยู่ของไฟล์ข้อมูล และ worksheet ที่ต้องการนำเข้า โดยการกำหนด worksheet ที่ต้องการนำเข้าสามารถกำหนดเป็นหมายเลขลำดับของ worksheet ก็ได้ หรือจะกำหนดเป็นชื่อของ worksheet ตามที่แสดงใน output ด้านบนก็ได้ดังตัวอย่างต่อไปนี้\n\nmydata<-read_excel(path=\"/Users/siwachoat/Library/CloudStorage/OneDrive-ChulalongkornUniversity/Documents/เอกสารประกอบการสอน/2758686/ชุดข้อมูลตัวอย่าง.xlsx\",\n                 sheet=\"PrePost\")\n\nคำสั่งข้างต้นหมายความว่าให้นำข้อมูลจากชุดข้อมูลที่กำหนดเข้ามาใน R แล้วเก็บไว้ในตัวแปร mydata ตัวแปรในเชิง programming มีความหมายที่แตกต่างไปจากตัวแปรในเชิงสถิติหรือการวิจัย โดยตัวแปรใน R นี้จะหมายถึงวัตถุภายในสภาพแวดล้อมของ R ที่ทำหน้าที่เก็บข้อมูล/ผลลัพธ์ที่ได้จากการประมวลผลเอาไว้ในหน่วยความจำของคอมพิวเตอร์ ซึ่งทำให้ผู้ใช้สามารถเรียกดูค่าที่เก็บไว้ในภายหลัง หรือนำค่า/ผลลัพธ์ที่เก็บไว้ไปใช้ในการดำเนินการในขั้นตอนอื่น ๆ ได้โดยง่าย (สิวะโชติ ศรีสุทธิยากร, 2564)\nตัวแปรใน R มีหลายประเภท และสามารถจำแนกได้หลากหลายลักษณะ หากจำแนกตามโครงสร้างอาจจำแนกได้เป็น ตัวแปรสเกลาร์ (scalar) เวกเตอร์ (vector) เมทริกซ์ (matrix) อาร์เรย์ (array) ชุดข้อมูล (dataframe/tibble) และลิสท์ (list)"
  },
  {
    "objectID": "intro.html#data-aesthetic-geometrics",
    "href": "intro.html#data-aesthetic-geometrics",
    "title": "มโนทัศน์เบื้องต้นของ ggplot2",
    "section": "Data, Aesthetic, & Geometrics",
    "text": "Data, Aesthetic, & Geometrics\nหัวข้อนี้จะกล่าวถึงการสร้างทัศนภาพข้อมูลด้วย ggplot2 โดยกำหนด layer หรือส่วนประกอบจำเป็นเพียง 3 ตัวได้แก่ Data, Aesthetic และ Geometric objects ความหมายของ layer ทั้งสามเป็นดังนี้\n\nData คือชุดข้อมูลที่ถูกจัดเก็บในลักษณะ Dataframe หรือ Tibble โดยที่ภายในชุดข้อมูลประกอบด้วยข้อมูลของตัวแปรที่เกี่ยวข้องกับทัศนภาพที่ต้องการสร้าง\nAesthetics คือส่วนที่ใช้กำหนดการจับคู่กันระหว่างตัวแปรกับ attribute ของทัศนภาพข้อมูล เช่น แกน/ตำแหน่งข้อมูล สี ขนาด เป็นต้น เนื่องจาก attribute ดังกล่าวถูกจับคู่กับตัวแปร จึงมีความผันแปรไปตามค่าของตัวแปรที่ถูกจับคู่ และทำให้ลักษณะของสัญลักษณ์เชิงเรขาคณิตที่ใช้แทนข้อมูลในแผนภาพมีความแตกต่างกันไปตามค่าของข้อมูล และสามารถใช้สัญลักษณ์ดังกล่าวแทน/สะท้อนสภาพของข้อมูลภายในชุดข้อมูลข้างต้นได้\nGeometric Objects คือส่วนที่ให้ผู้วิเคราะห์กำหนด visual mark หรือรูปทรง/สัญลักษณ์ทางเรขาคณิตใดสำหรับเป็นตัวแทนข้อมูล รูปทรงเรขาคณิตดังกล่าวเช่น จุด เส้น แผนภูมิแท่ง พื้นที่ ฮิสโทแกรม แผนภาพกล่อง เป็นต้น การแสดงผลของรูปเรขาคณิตดังกล่าวจะมีลักษณะที่ขึ้นอยู่กับการกำหนด attribute ภายในชั้นของ aesthetic ที่กล่าวไว้ข้างต้น\n\nการกำหนดส่วนประกอบทั้งสามข้างต้นนั้นเพียงพอที่จะสร้างทัศนภาพข้อมูลขึ้นมาได้ แต่ ในทัศนภาพข้อมูลที่สร้างขึ้นจะเป็นค่าเริ่มต้น (default) ซึ่งโดยส่วนมากจะใช้งานได้ไม่เต็มประสิทธิภาพ ทัศนภาพข้อมูลดังกล่าวจึงต้องการการปรับแต่งไม่มากก็น้อย อย่างไรก็ตามการสร้างทัศนภาพข้อมูลจากส่วนประกอบจำเป็นทั้งสามนี้เป็นพื้นฐานสำคัญในการพัฒนาทัศนภาพข้อมูลตามหลัก grammar of graphics ใน ggplot2\nรูปด้านล่างแสดงความสัมพันธ์ระหว่างส่วนประกอบจำเป็นทั้งสาม\n\n\n\nhttps://rfortherestofus.com/2019/07/a-short-overview-of-the-grammar-of-graphics/\n\n\nตัวอย่างต่อไปนี้แสดงการสร้างแผนภาพการกระจายด้วยการกำหนดองค์ประกอบทั้งสาม ระหว่างตัวแปร gdrPercap กับ lifeExp ในชุดข้อมูล gapminder โดยคัดกรองเฉพาะข้อมูลในปี 2007 มานำเสนอ\n\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n\n\nggplot(gapminder%>%filter(year==2007))+\n  geom_point(aes(x=gdpPercap, y=lifeExp))\n\n\n\n\nการกำหนดองค์ประกอบข้างต้นอาจเขียนอีกลักษณะคือ\n\nggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp))+geom_point()\n\nซึ่งผลลัพธ์ที่ได้จะเหมือนกับคำสั่งในข้างต้น อย่างไรก็ตามการเขียนคำสั่งทั้งสองลักษณะนี้มีความแตกต่างกัน ทั้งนี้จะกล่าวรายละเอียดอีกครั้งภายหลัง\n\nเมื่อพิจารณาการเขียนคำสั่งข้างต้นจะเห็นว่าภายในฟังก์ชัน ggplot() มีการระบุอาร์กิวเมนท์ data = gapminder เพื่อนำชุดข้อมูลที่ต้องการใช้เข้าสู่ฟังก์ชัน\nจากนั้นมีการระบุฟังก์ชัน aes() เพื่อกำหนดการจับคู่ระหว่างข้อมูลของตัวแปร gdpPercap และ lifeExp กับแกนของแผนภาพ ซึ่งเป็นการจับคู่ข้อมูลกับตำแหน่ง (position) ของสัญลักษณ์ที่ใช้แทนข้อมูล ทั้งนี้ฟังก์ชัน aes() จะต้องระบุภายใต้ฟังก์ชัน ggplot() หรือ geom_xxx()\nในตัวอย่างข้างต้นจะเห็นว่ามีการระบุ aes(x = gdpPercap, y = lifeExp) ไว้ภายใต้ฟังก์ชัน ggplot() ซึ่งหมายความว่ากำหนดให้ข้อมูลของตัวแปร gdpPercap แสดงผลลงบนแกน X และตัวแปร lifeExp แสดงผลลงบนแกน Y\nสุดท้ายมีการกำหนดสัญลักษณ์เชิงเรขาคณิตคือ จุด (point) ให้กับข้อมูลทั้งสองตัวแปรโดยใช้ฟังก์ชัน geom_point() ฟังก์ชันนี้ถือเป็น geometrics layer ของทัศนภาพข้อมูลภายใต้หลักภาษากราฟิก\n\nส่วนสำคัญของการเขียนคำสั่งข้างต้นคือทุกทัศนภาพข้อมูลจะต้องเริ่มด้วยฟังก์ชัน ggplot() จากนั้นใช้เครื่องหมาย + เพื่อเพิ่ม layer ต่าง ๆ ที่ต้องการลงบนทัศนภาพข้อมูล ในบทเรียนอื่น ๆ ผู้อ่านจะได้เห็นการเพิ่ม layer อื่น ๆ เพื่อเพิ่มเติมหรือปรับเปลี่ยนรายละเอียดในส่วนต่าง ๆ ของทัศนภาพข้อมูลต่อไป\nจากพื้นฐานการใช้ ggplot2 ข้างต้นจะเห็นว่าส่วนสำคัญคือการทราบว่ามี attribute และ geometric objects ใดบ้างที่สามารถกำหนดได้ เบื้องต้นสามารถศึกษาได้จาก cheatsheet ของ ggplot2 ดังนี้\n\n\n\nhttps://www.rstudio.com/resources/cheatsheets/\n\n\ngeometric objects ใน ggplot2 มีจำนวนมาก หัวข้อต่อไปจะแสดงการใช้ฟังก์ชัน geom_xxx() ต่าง ๆ เพื่อสร้างทัศนภาพข้อมูล โดยจำแนกออกเป็น 4 กลุ่ม ได้แก่ ทัศนภาพของการแจกแจงข้อมูล (distribution) ทัศนภาพของการเปรียบเทียบข้อมูล (comparison) ทัศนภาพของความสัมพันธ์ระหว่างข้อมูล (relationship) และทัศนภาพของส่วนประกอบข้อมูล (composition) รายละเอียดมีดังนี้\n\n\n\n\n\n\nDistribution\nทัศนภาพของการแจกแจงข้อมูลอาจจำแนกได้อีก 2 ประเภทย่อย ได้แก่ การแจกแจงของตัวแปรเชิงปริมาณ ซึ่งจากแผนภาพข้างบนจะเห็นว่ามี geometric objects ที่เกี่ยวข้องได้แก่ geom_histogram(), geom_density(), geom_boxplot() geom_violin() และ geom_point() โดยที่ geom_point() ใช้สำหรับวิเคราะห์การแจกแจงร่วมระหว่างตัวแปรสองตัว และการแจกแจงของตัวแปรจัดประเภทที่มี geometric object ที่เกี่ยวข้องคือ geom_bar() รายละเอียดมีดังนี้\n\ngeom_histogram() และ geom_density()\nเป็น geometric objects ที่คุ้่นเคยใช้แสดงการแจกแจงของตัวแปรเชิงปริมาณตัวแปรเดียว\n\np<-ggplot(data=gapminder)\np+geom_histogram(aes(x=lifeExp), bins=15)\np+geom_density(aes(x=lifeExp))\n\n\n\n\n\n\n\n\n\n\n\nเราสามารถ plot แผนภาพ histogram และ density ซ้อนกันได้ โดยเขียนคำสั่งดังนี้\n\np+geom_histogram(aes(x=lifeExp, y=..density..))+\n  geom_density(aes(x=lifeExp))\n\n\n\n\n\n\n\nComparison\n\n\nComposition\n\n\nRelationship"
  },
  {
    "objectID": "intro.html#necessary-layers",
    "href": "intro.html#necessary-layers",
    "title": "มโนทัศน์เบื้องต้นของ ggplot2",
    "section": "Necessary layers",
    "text": "Necessary layers\nหัวข้อนี้จะกล่าวถึงการสร้างทัศนภาพข้อมูลด้วย ggplot2 โดยกำหนด layer หรือส่วนประกอบจำเป็นเพียง 3 ตัวได้แก่ Data, Aesthetic และ Geometric objects ความหมายของ layer ทั้งสามเป็นดังนี้\n\nData คือชุดข้อมูลที่ถูกจัดเก็บในลักษณะ Dataframe หรือ Tibble โดยที่ภายในชุดข้อมูลประกอบด้วยข้อมูลของตัวแปรที่เกี่ยวข้องกับทัศนภาพที่ต้องการสร้าง\nAesthetics คือส่วนที่ใช้กำหนดการจับคู่กันระหว่างตัวแปรกับ attribute ของทัศนภาพข้อมูล เช่น แกน/ตำแหน่งข้อมูล สี ขนาด เป็นต้น เนื่องจาก attribute ดังกล่าวถูกจับคู่กับตัวแปร จึงมีความผันแปรไปตามค่าของตัวแปรที่ถูกจับคู่ และทำให้ลักษณะของสัญลักษณ์เชิงเรขาคณิตที่ใช้แทนข้อมูลในแผนภาพมีความแตกต่างกันไปตามค่าของข้อมูล และสามารถใช้สัญลักษณ์ดังกล่าวแทน/สะท้อนสภาพของข้อมูลภายในชุดข้อมูลข้างต้นได้\nGeometric Objects คือส่วนที่ให้ผู้วิเคราะห์กำหนด visual mark หรือรูปทรง/สัญลักษณ์ทางเรขาคณิตใดสำหรับเป็นตัวแทนข้อมูล รูปทรงเรขาคณิตดังกล่าวเช่น จุด เส้น แผนภูมิแท่ง พื้นที่ ฮิสโทแกรม แผนภาพกล่อง เป็นต้น การแสดงผลของรูปเรขาคณิตดังกล่าวจะมีลักษณะที่ขึ้นอยู่กับการกำหนด attribute ภายในชั้นของ aesthetic ที่กล่าวไว้ข้างต้น\n\nการกำหนดส่วนประกอบทั้งสามข้างต้นนั้นเพียงพอที่จะสร้างทัศนภาพข้อมูลขึ้นมาได้ แต่ ในทัศนภาพข้อมูลที่สร้างขึ้นจะเป็นค่าเริ่มต้น (default) ซึ่งโดยส่วนมากจะใช้งานได้ไม่เต็มประสิทธิภาพ ทัศนภาพข้อมูลดังกล่าวจึงต้องการการปรับแต่งไม่มากก็น้อย อย่างไรก็ตามการสร้างทัศนภาพข้อมูลจากส่วนประกอบจำเป็นทั้งสามนี้เป็นพื้นฐานสำคัญในการพัฒนาทัศนภาพข้อมูลตามหลัก grammar of graphics ใน ggplot2\nรูปด้านล่างแสดงความสัมพันธ์ระหว่างส่วนประกอบจำเป็นทั้งสาม\n\n\n\nhttps://rfortherestofus.com/2019/07/a-short-overview-of-the-grammar-of-graphics/\n\n\nตัวอย่างต่อไปนี้แสดงการสร้างแผนภาพการกระจายด้วยการกำหนดองค์ประกอบทั้งสาม ระหว่างตัวแปร gdrPercap กับ lifeExp ในชุดข้อมูล gapminder โดยคัดกรองเฉพาะข้อมูลในปี 2007 มานำเสนอ\n\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n\n\nggplot(gapminder%>%filter(year==2007))+\n  geom_point(aes(x=gdpPercap, y=lifeExp))\n\n\n\n\nการกำหนดองค์ประกอบข้างต้นอาจเขียนอีกลักษณะคือ\n\nggplot(data = gapminder%>%filter(year==2007), aes(x = gdpPercap, y = lifeExp))+geom_point()\n\nซึ่งผลลัพธ์ที่ได้จะเหมือนกับคำสั่งในข้างต้น อย่างไรก็ตามการเขียนคำสั่งทั้งสองลักษณะนี้มีความแตกต่างกัน ทั้งนี้จะกล่าวรายละเอียดอีกครั้งภายหลัง\n\nเมื่อพิจารณาการเขียนคำสั่งข้างต้นจะเห็นว่าภายในฟังก์ชัน ggplot() มีการระบุอาร์กิวเมนท์ data = gapminder%>%filter(year==2007) เพื่อนำชุดข้อมูลที่ต้องการใช้เข้าสู่ฟังก์ชัน โดยมีการใช้ฟังก์ชัน filter() ใน package-dplyr คัดกรองเอาข้อมูลเฉพาะในปี 2007 มาใช้\nจากนั้นมีการระบุฟังก์ชัน aes() เพื่อกำหนดการจับคู่ระหว่างข้อมูลของตัวแปร gdpPercap และ lifeExp กับแกนของแผนภาพ ซึ่งเป็นการจับคู่ข้อมูลกับตำแหน่ง (position) ของสัญลักษณ์ที่ใช้แทนข้อมูล ทั้งนี้ฟังก์ชัน aes() จะต้องระบุภายใต้ฟังก์ชัน ggplot() หรือ geom_xxx()\nในตัวอย่างข้างต้นจะเห็นว่ามีการระบุ aes(x = gdpPercap, y = lifeExp) ไว้ภายใต้ฟังก์ชัน ggplot() ซึ่งหมายความว่ากำหนดให้ข้อมูลของตัวแปร gdpPercap แสดงผลลงบนแกน X และตัวแปร lifeExp แสดงผลลงบนแกน Y\nสุดท้ายมีการกำหนดสัญลักษณ์เชิงเรขาคณิตคือ จุด (point) ให้กับข้อมูลทั้งสองตัวแปรโดยใช้ฟังก์ชัน geom_point() ฟังก์ชันนี้ถือเป็น geometrics layer ของทัศนภาพข้อมูลภายใต้หลักภาษากราฟิก\n\nส่วนสำคัญของการเขียนคำสั่งข้างต้นคือทุกทัศนภาพข้อมูลจะต้องเริ่มด้วยฟังก์ชัน ggplot() จากนั้นใช้เครื่องหมาย + เพื่อเพิ่ม layer ต่าง ๆ ที่ต้องการลงบนทัศนภาพข้อมูล ในบทเรียนอื่น ๆ ผู้อ่านจะได้เห็นการเพิ่ม layer อื่น ๆ เพื่อเพิ่มเติมหรือปรับเปลี่ยนรายละเอียดในส่วนต่าง ๆ ของทัศนภาพข้อมูลต่อไป\nจากพื้นฐานการใช้ ggplot2 ข้างต้นจะเห็นว่าส่วนสำคัญคือการทราบว่ามี attribute และ geometric objects ใดบ้างที่สามารถกำหนดได้ เบื้องต้นสามารถศึกษาได้จาก cheatsheet ของ ggplot2 ดังนี้\n\n\n\nhttps://www.rstudio.com/resources/cheatsheets/\n\n\n\nAesthetic layer\nอย่างที่กล่าวไว้ข้างต้น การกำหนดคุณลักษณะให้กับสัญลักษณ์ที่ใช้แทนข้อมูลใน library ggplot2 จะทำผ่านฟังก์ชัน aes() ที่สามารถกำหนดไว้ในฟังก์ชัน ggplot() ก็ได้ หรือในฟังก์ชัน geom_xxx() ก็ได้ ในกรณีที่กำหนดไว้ใน ggplot() จะเรียก aesthetic ดังกล่าวว่า globle aesthetic เพราะการกำหนดดังกล่าวจะมีผลกับทุกส่วนประกอบของทัศนภาพข้อมูลนั้น ส่วนในกรณีที่กำหนดไว้ใน geom_xxx() จะเรียกว่า local aesthetic เพราะการกำหนดนี้จะมีผลเฉพาะกับ geom_xxx() ที่กำหนด aes ไว้เท่านั้น\nในหัวข้อนี้จะกล่าวถึงการกำหนด aesthetics layer ให้กับแผนภาพการกระจายที่สร้างจาก geom_point() ในข้างต้น โดยเมื่อพิจารณาจาก cheatsheet พบว่า geom_point() มี aesthetic ที่สามารถกำหนดได้หลายตัว ในหัวข้อนี้จะแสดงการกำหนด aesthetic จำนวนหนึ่งได้แก่ สี (color) ขนาด (size) และ รูปแบบของสัญลักษณ์ (shape) รายละเอียดมีดังนี้\nเราทราบแล้วว่าสีเป็นคุณลักษณะที่สามารถแสดงค่าของข้อมูลได้ สามารถใช้ได้กับทั้งข้อมูลจัดประเภท และข้อมูลเชิงปริมาณ โดยอาจจำแนกการใช้งานได้ 3 วัตถุประสงค์หลัก ได้แก่ แสดงความแตกต่าง แทนค่า/ปริมาณข้อมูล และเน้นส่วนสำคัญ การกำหนดการจับคู่ระหว่างข้อมูลของตัวแปรที่กำหนดกับ attribute สี สามารถทำได้ผ่านอาร์กิวเมนท์ color หรือ col ของฟังก์ชัน aes() ตัวอย่างด้านล่างแสดงการจับคู่ระหว่างตัวแปร continent กับสี\nจากรูปจะเห็นว่าสีของจุดมีการผันแปนไปตามค่าสังเกตของตัวแปร continent ทางด้านขวาของแผนภาพจะมี legend ให้แสดงการเข้ารหัส (encoding) ระหว่างข้อมูล continent กับสี เพื่อให้ผู้อ่านทราบว่าสีใดเป็นของทวีปใด\n\nggplot(data = gapminder%>%filter(year==2007))+\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 col=continent))\n\n\n\n\nคำสั่งและรูปต่อไปนี้แสดงตัวอย่างการกำหนด aes เพื่อจับคู่ข้อมูลกับ attribute อื่น ๆ ได้แก่ shape และ size นอกจากนี้จะเห็นว่าผู้วิเคราะห์ยังสามารถ mapping ข้อมูลกับ attribute หลาย ๆ ตัวได้ในแผนภาพเดียว\n\n# shape\nggplot(data = gapminder%>%filter(year==2007))+\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 shape=continent))+\n  ggtitle(\"shape\")\n# size\nggplot(data = gapminder%>%filter(year==2007))+\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 size=pop))+\n  ggtitle(\"size\")\n# col and size\nggplot(data = gapminder%>%filter(year==2007))+\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 col=continent,\n                 size=pop))+\n  ggtitle(\"col and size\")\n# col, shape, and size\nggplot(data = gapminder%>%filter(year==2007))+\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 col=continent,\n                 shape=continent,\n                 size=pop))+\n  ggtitle(\"col, shape and size\")\n\n\n\n\n\n\nในกรณีที่ผู้วิเคราะห์ไม่ต้องการให้ attribute ในข้างต้นมีค่าเปลี่ยนแปลงไปตามข้อมูลหรือค่าสังเกตของตัวแปร สามารถทำได้ง่าย ๆ โดยการกำหนดค่าให้กับ attribute ดังกล่าวภายนอกฟังก์ชัน aes() ดังตัวอย่างต่อไปนี้\n\nggplot(data = gapminder%>%filter(year==(2007)), \n       aes(x = gdpPercap, y = lifeExp))+\n        geom_point(aes(size=pop,shape=continent),\n                   col=\"blue\")\n\n\n\nggplot(data = gapminder%>%filter(year==(2007)), \n       aes(x = gdpPercap, y = lifeExp))+\n        geom_point(aes(size=pop),\n                   col=\"#D36B00\",\n                   shape=3)\n\n\n\n\n\n\nกิจกรรม\n\nจากตัวอย่างข้างต้นจะเห็นว่ามีการกำหนด attribute สีให้กับตัวแปรจัดประเภทคือ continent หากลองเปลี่ยนเป็นกำหนด atribute สีให้กับตัวแปรต่อเนื่อง ผลที่ได้จะเป็นอย่างไร?\nหากกำหนด attribute shape ให้กับตัวแปรต่อเนื่อง ผลที่ได้จะเป็นอย่างไร?\n\n\n\nGeometric layer\ngeometric objects ใน ggplot2 มีจำนวนมาก หัวข้อต่อไปจะแสดงการใช้ฟังก์ชัน geom_xxx() ต่าง ๆ เพื่อสร้างทัศนภาพข้อมูล โดยจำแนกออกเป็น 4 กลุ่ม ได้แก่ ทัศนภาพของการแจกแจงข้อมูล (distribution) ทัศนภาพของการเปรียบเทียบข้อมูล (comparison) ทัศนภาพของความสัมพันธ์ระหว่างข้อมูล (relationship) และทัศนภาพของส่วนประกอบข้อมูล (composition) รายละเอียดมีดังนี้\n\n\n\n\n\n\nDistribution\nการสร้างทัศนภาพของการแจกแจงข้อมูลด้วย ggplot2 มี geometric objects พื้นฐานที่เกี่ยวข้องได้แก่\n\ngeom_histogram()\ngeom_density()\ngeom_bar()\ngeom_boxplot()\ngeom_violin()\ngeom_point()\n\nโดยฟังก์ชันในข้างต้นยังสามารถจำแนกเป็นกลุ่มย่อยตามลักษณะและจำนวนตัวแปรที่ต้องการนำเสนอ ตามรายละเอียดในรูป\n\n\n\n\n\n\n\n\ngeom_histogram() และ geom_density()\nเป็น geometric objects ที่คุ้่นเคยใช้แสดงการแจกแจงของตัวแปรเชิงปริมาณตัวแปรเดียว\n\np<-ggplot(data=gapminder)\np+geom_histogram(aes(x=lifeExp), bins=15)\np+geom_density(aes(x=lifeExp))\n\n\n\n\n\n\n\n\n\n\n\nเราสามารถ plot แผนภาพ histogram และ density ซ้อนกันได้ โดยเขียนคำสั่งดังนี้\n\np+geom_histogram(aes(x=lifeExp, y=..density..))+\n  geom_density(aes(x=lifeExp))\n\n\n\n\nฟังก์ชัน geom_histogram() และ geom_density() ยังมี attribute หลายตัวที่สามารถกำหนดจับคู่กับตัวแปรในฟังก์ชัน aes() การกำหนดอย่างเหมาะสมจะได้ทัศนภาพข้อมูลที่สามารถนำเสนอสารสนเทศของตัวแปรได้มากกว่าหนึ่งตัว เช่น\n\np+geom_density(aes(x=lifeExp, fill=continent))\np+geom_density(aes(x=lifeExp, col=continent))\np+geom_density(aes(x=lifeExp, col=continent, linetype=continent))\n\n\n\n\n\n\n\n\ngeom_boxplot() และ geom_violin()\nโดยปกติแผนภาพกล่องและแผนภาพไวโอลินมักนิยมใช้เพื่อเปรียบเทียบการแจกแจงของตัวแปรระหว่างกลุ่มตัวอย่าง/ประชากรที่แตกต่างกันมากกว่าจะใช้วิเคราะห์การแจกแจงของตัวแปรเดียว ใน cheatsheet ของ ggplot2 จึงจัด geom_boxplot() และ geom_violin() อยู่ในกลุ่มของทัศนภาพข้อมูลสำหรับตัวแปรสองตัวที่ตัวหนึ่งเป็นตัวแปรต่อเนื่องและอีกตัวแปรตัวแปรไม่ต่อเนื่อง แต่ในทางปฏิบัติผู้วิเคราะห์สามารถใช้แผนภาพทั้งสองเพื่อสำรวจการแจกแจงของตัวแปรที่ต้องการได้เช่นเดียวกัน\nการเขียนคำสั่งสามารถทำได้ดังนี้\n\np+geom_boxplot(aes(x=lifeExp))\np+geom_boxplot(aes(y=lifeExp))\np+geom_violin(aes(x=lifeExp, y=0))\np+geom_violin(aes(x=0,y=lifeExp))\n\n\n\n\n\n\nในทำนองเดียวกัน ในกรณีที่มีตัวแปรต่อเนื่อง 1 ตัว และตัวแปรจัดประเภท 1 ตัว การสร้างทัศนภาพข้อมูลเพื่อวิเคราะห์การแจกแจงของตัวแปรต่อเนื่องในแต่ละกลุ่มของตัวแปรจัดประเภทสามารถทำได้โดยกำหนด attribute ที่เหมาะสมให้กับตัวแปรจัดประเภท เช่น\n\np+geom_boxplot(aes(x=continent, y=lifeExp, fill=continent))\n\n\n\np+geom_violin(aes(x=continent, y=lifeExp, fill=continent))\n\n\n\n\n\n\ngeom_bar() (แผนภูมิแท่งเชิงเดียว)\nแผนภูมิแท่งเป็นทัศนภาพข้อมูลที่มีประโยชน์ค่อนข้างหลากหลาย สามารถใช้ได้ทั้งในลักษณะทัศนภาพของการแจกแจง การเปรียบเทียบ และส่วนประกอบของข้อมูล ในหัวข้อนี้จะกล่าวถึงการใช้แผนภูมิแท่งเพื่อนำเสนอการแจกแจงข้อมูลของตัวแปรจัดประเภท ซึ่งจะใช้แผนภูมิแท่งเชิงเดียว (simple barchart) เป็นเครื่องมือ รายละเอียดมีดังนี้\nการสร้างแผนภูมิแท่งเชิงเดียวด้วย geom_bar() อาจทำได้ 2 ลักษณะ ลักษณะแรกคือสร้างจากข้อมูลดิบโดยตรง ให้กำหนดอาร์กิวเมนท์ stat=\"count\" เพื่อกำหนดให้โปรแกรมแปลงข้อมูลดิบเป็นข้อมูลแจงนับ (count data) ก่อน แล้วจึงสร้างแผนภูมิแท่ง\n\np+geom_bar(aes(x=continent), stat=\"count\")\n\n\n\n\nอีกลักษณะหนึ่งคือสร้างจากตารางแจกแจงความถี่ ในกรณีนี้ข้อมูลที่นำเข้ามาไม่ต้องผ่านการแปลงใด ๆ แล้วให้กำหนด stat=\"identity\" ซึ่งหมายถึงให้นำข้อมูลมาพล็อตเป็นแผนภูมิแท่งโดยตรง ดังตัวอย่างต่อไปนี้\n\n# code ส่วนสร้างตารางแจกแจงความถี่\ngapminder%>%filter(year==1952)%>%\n  group_by(continent)%>%\n  count()\n\n# A tibble: 5 × 2\n# Groups:   continent [5]\n  continent     n\n  <fct>     <int>\n1 Africa       52\n2 Americas     25\n3 Asia         33\n4 Europe       30\n5 Oceania       2\n\n\n\n#นำตารางแจกแจงความถี่ที่สร้างขึ้นไปพล็อตเป็นแผนภูมิแท่ง\ngapminder%>%filter(year==1952)%>%\n  group_by(continent)%>%\n  count()%>%\n  ggplot()+geom_bar(aes(x=continent, y=n),stat=\"identity\")\n\n\n\n\nการสร้างตารางแจกแจงความถี่ใน R สามารถทำได้หลายวิธีการ วิธีการข้างต้นใช้ฟังก์ชันภายใต้ package-dplyr ของจักรวาล tidy ซึ่งเป็นหนึ่งของวิธีการหลักที่นักสถิติและนักวิทยาการข้อมูลใช้กันในปัจจุบัน\nอีกวิธีการหนึ่งเป็นวิธีการแบบดั้งเดิม คือการสร้างตารางแจกแจงความถี่ของตัวแปรที่ต้องการด้วยฟังก์ชัน table() ก่อน โดยเก็บตารางแจกแจงความถี่เอาไว้ในตัวแปร แล้วนำตัวแปรดังกล่าวไปพล็อตแผนภูมิแท่ง ดังตัวอย่างต่อไปนี้\n\n#สร้างตารางแจกแจงความถี่\nmytab<-table(gapminder%>%filter(year==1952)%>%select(continent))\n#แปลงตารางแจกแจงความถี่ให้เป็นชุดข้อมูลเพื่อที่จะนำเข้าใน ggplot()\nmytab<-data.frame(mytab)\nmytab\n\n  continent Freq\n1    Africa   52\n2  Americas   25\n3      Asia   33\n4    Europe   30\n5   Oceania    2\n\nggplot(data=mytab)+geom_bar(aes(x=continent,y=Freq),stat=\"identity\")\n\n\n\n\n\n\n\n\nComparison\n\n\nComposition\n\n\nRelationship"
  }
]